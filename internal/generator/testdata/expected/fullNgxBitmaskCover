/**
 * Copyright (c) F5, Inc.
 *
 * This source code is licensed under the Apache License, Version 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

// Code generated by generator; DO NOT EDIT.
// All the definitions are extracted from the source code
// Each bit mask describes these behaviors:
//   - how many arguments the directive can take
//   - whether or not it is a block directive
//   - whether this is a flag (takes one argument that's either "on" or "off")
//   - which contexts it's allowed to be in

package crossplane

var directives = map[string][]uint{
    "all_bitmask": {
        ngxConfNoArgs | ngxConfTake1 | ngxConfTake2 | ngxConfTake3 | ngxConfTake4 | ngxConfTake5 | ngxConfTake6 | ngxConfTake7 | ngxConfTake12 | ngxConfTake13 | ngxConfTake23 | ngxConfTake123 | ngxConfTake1234 | ngxConfBlock | ngxConfFlag | ngxConfAny | ngxConf1More | ngxConf2More | ngxDirectConf | ngxMainConf,
    },
}


func Match(directive string) ([]uint, bool) {
    m, ok := directives[directive]
    return m, ok
}
